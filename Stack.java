import java.io.PrintStream;import java.util.NoSuchElementException;/** * Defines the methods for a Stack that handles objects of type parameter T * @author Stavropoulos Petros(3150230), Savvidis Konstantinos(3150229)  *  * @param <T> the type of object that can be passed as an argument */public interface Stack<T> {	    /**	 * @return true if the stack is empty	 */	public boolean isEmpty();	/**	 * insert an item of type to the stack	 */	public void push(T item);	/**	 * remove and return the item on the top of the stack	 * @return the item on the top of the stack	 * @throws a NoSuchElementException if the stack is empty	 */	public T pop() throws NoSuchElementException;    /**	 * return without removing the item on the top of the stack	 * @return the item on the top of the stack	 * @throws a NoSuchElementException if the stack is empty	 */	public T peek() throws NoSuchElementException;	/**	 * print the elements of the queue, starting from the oldest item, to the print stream given as argument. 	 * For example, to print the elements to the standard output, pass System.out as parameter. 	 * E.g., printQueue(System.out);	 */	public void printStack(PrintStream stream); 	/**     * return the size of the stack, 0 if empty	 * @return the number of items currently in the stack	 */	public int size();}